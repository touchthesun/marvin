tests/benchmarks/test_keyword_extraction.py::TestTextCleaner::test_normalize_text PASSED
tests/benchmarks/test_keyword_extraction.py::TestTextCleaner::test_is_ui_text UI pattern matched: \b(click|tap|press|select|choose)\b
UI pattern matched: \b(click|tap|press|select|choose)\b
UI pattern matched: \b(menu|navigation|sidebar|toolbar)\b
UI pattern matched: \b(previous|next|back|forward)\b
UI pattern matched: \b(loading|please wait)\b
UI pattern matched: (·|•|›|»|→)
PASSED
tests/benchmarks/test_keyword_extraction.py::TestTextCleaner::test_not_ui_text PASSED
tests/benchmarks/test_keyword_extraction.py::TestTextCleaner::test_is_substantial_text UI pattern matched: \b(click|tap|press|select|choose)\b
PASSED
tests/benchmarks/test_keyword_extraction.py::TestHTMLProcessor::test_clean_html_with_non_html PASSED
tests/benchmarks/test_keyword_extraction.py::TestHTMLProcessor::test_remove_unwanted_elements PASSED
tests/benchmarks/test_keyword_extraction.py::TestHTMLProcessor::test_should_keep_element PASSED
tests/benchmarks/test_keyword_extraction.py::TestHTMLProcessor::test_extract_content PASSED
tests/benchmarks/test_keyword_extraction.py::TestGeneralBenchmarks::test_comprehensive_benchmark 
Processing: Pluralistic_ Google’s enshittification memos (03 Oct 2023) – Pluralistic_ Daily links from Cory Doctorow.html

Raw keywords found: 10
Keywords after filtering: 10

Processing: The Subprime AI Crisis.html

Raw keywords found: 10
Keywords after filtering: 10

Processing: Diceware Secure Passphrase and Password Generator.html

Raw keywords found: 3
Keywords after filtering: 3

Processing: The Allopathic Complex and Its Consequences.html

Raw keywords found: 10
Keywords after filtering: 10


Quality Metrics:
  Average keywords per page: 8.25
  Average keyword length: 3.24
  Average keyword score: 47.81
  Keyword types:
    phrases: 33
PASSED
tests/benchmarks/test_keyword_extraction.py::TestRAKEExtraction::test_rake_extraction 
Raw keywords found: 79
Keywords after filtering: 15

Raw keywords found: 246
Keywords after filtering: 15

Raw keywords found: 5
Keywords after filtering: 3

Raw keywords found: 44
Keywords after filtering: 15
PASSED
tests/benchmarks/test_keyword_extraction.py::TestTFIDFExtraction::test_tfidf_extraction 
Raw keywords found: 1822

TF-IDF Debug:
Top 5 raw keywords:
  https: score=0.05803436222569512, freq=46
  google: score=0.05694099274653987, freq=42
  com: score=0.05163070360235503, freq=27
  company: score=0.04970358111165676, freq=23
  users: score=0.0445662269884641, freq=15

Filtering stats:
Valid phrases: 915
Above score threshold: 3
Keywords after filtering: 3

Raw keywords found: 3209

TF-IDF Debug:
Top 5 raw keywords:
  ai: score=0.05266897638318549, freq=157
  microsoft: score=0.04236307099270743, freq=48
  generative: score=0.04160636455987273, freq=44
  generative ai: score=0.04120179683201468, freq=42
  billion: score=0.03883688779447999, freq=32

Filtering stats:
Valid phrases: 1374
Above score threshold: 1
Keywords after filtering: 1

Raw keywords found: 83

TF-IDF Debug:
Top 5 raw keywords:
  passphrase: score=0.1971735696257117, freq=6
  word: score=0.1842967467586181, freq=5
  symbol: score=0.14821867026083463, freq=3
  buttons: score=0.11958188990580355, freq=2
  able: score=0.07062699054092646, freq=1

Filtering stats:
Valid phrases: 35
Above score threshold: 83
Keywords after filtering: 15

Raw keywords found: 757

TF-IDF Debug:
Top 5 raw keywords:
  pain: score=0.07986828686897758, freq=18
  us: score=0.06780118457345063, freq=10
  mother: score=0.06563816149676314, freq=9
  healthcare: score=0.06322010742236532, freq=8
  doctor: score=0.06047874381090501, freq=7

Filtering stats:
Valid phrases: 348
Above score threshold: 13
Keywords after filtering: 10
PASSED
tests/benchmarks/test_keyword_extraction.py::TestNERExtraction::test_ner_extraction 
Raw keywords found: 81
Keywords after filtering: 15

Raw keywords found: 109
Keywords after filtering: 15

Raw keywords found: 0
Keywords after filtering: 0

Raw keywords found: 11
Keywords after filtering: 11
PASSED
tests/benchmarks/test_keyword_extraction.py::TestHybridExtraction::test_hybrid_extraction PASSED
tests/benchmarks/test_keyword_extraction.py::test_html_processor_with_readability 

Content length: 8645

First 500 chars of content:
--------------------------------------------------------------------------------
The second amendment means I am my own chief executive and commander in chief of my own military. I authorize my own act of self-defense in response to a hostile entity making war on me and my family.Nelson Mandela says no form of viooence can be excused. Camus says it’s all the same, whether you live or die or have a cup of coffee. MLK says violence never brings permanent peace. Gandhi says that non-violence is the mightiest power available to mankind.That’s who they tell you are heroes. That’s
--------------------------------------------------------------------------------
PASSED

====================================================================== warnings summary ======================================================================
../../../../miniconda3/envs/marvin/lib/python3.9/site-packages/_pytest/config/__init__.py:1448
  /Users/nathanparker/miniconda3/envs/marvin/lib/python3.9/site-packages/_pytest/config/__init__.py:1448: PytestConfigWarning: Unknown config option: asyncio_mode
  
    self._warn_or_fail_if_strict(f"Unknown config option: {key}\n")

tests/benchmarks/test_keyword_extraction.py::TestGeneralBenchmarks::test_comprehensive_benchmark
  /Users/nathanparker/miniconda3/envs/marvin/lib/python3.9/site-packages/_pytest/python.py:166: PytestReturnNotNoneWarning: Expected None, but tests/benchmarks/test_keyword_extraction.py::TestGeneralBenchmarks::test_comprehensive_benchmark returned {'Pluralistic_ Google’s enshittification memos (03 Oct 2023) – Pluralistic_ Daily links from Cory Doctorow.html': 
  BenchmarkResult for: Pluralistic_ Google’s enshittification memos (03 Oct 2023) – Pluralistic_ Daily links from Cory Doctorow.html
    Processing time: 0.358s
    Keywords:
        little brother short story          (score:  55.25, freq:  1)
        every big tech schemer              (score:  29.70, freq:  1)
        company whose employees often       (score:  26.83, freq:  1)
        big tech tells                      (score:  26.77, freq:  1)
        third little brother novel          (score:  25.53, freq:  1)
        advertising business model          (score:  24.42, freq:  1)
        company whose name                  (score:  23.62, freq:  1)
        bill every time                     (score:  21.06, freq:  1)
        engine across every platforms       (score:  19.02, freq:  1)
        good things worse                   (score:  18.72, freq:  1)
  , 'The Subprime AI Crisis.html': 
  BenchmarkResult for: The Subprime AI Crisis.html
    Processing time: 0.973s
    Keywords:
        large language models               (score: 203.29, freq:  1)
        big ai players                      (score: 168.85, freq:  1)
        new york times                      (score: 108.09, freq:  1)
        huge ai investments                 (score: 104.46, freq:  1)
        entire tech industry                (score:  84.60, freq:  1)
        big large language models           (score:  83.06, freq:  1)
        big tech sees                       (score:  77.46, freq:  1)
        big tech realizes                   (score:  77.46, freq:  1)
        big tech accepts                    (score:  77.46, freq:  1)
        big tech hyperscaler                (score:  77.42, freq:  1)
  , 'Diceware Secure Passphrase and Password Generator.html': 
  BenchmarkResult for: Diceware Secure Passphrase and Password Generator.html
    Processing time: 0.038s
    Keywords:
        totally new passphrase              (score:  15.84, freq:  1)
        five die rolls                      (score:  14.40, freq:  1)
        diceware word list                  (score:  10.29, freq:  1)
  , 'The Allopathic Complex and Its Consequences.html': 
  BenchmarkResult for: The Allopathic Complex and Its Consequences.html
    Processing time: 0.218s
    Keywords:
        united healthcare plan              (score:  37.05, freq:  1)
        united healthcare changes           (score:  37.05, freq:  1)
        full speed ahead                    (score:  18.43, freq:  1)
        one years old                       (score:  18.00, freq:  1)
        occasional sharp stabbing pains     (score:  17.28, freq:  1)
        mightiest power available           (score:  17.28, freq:  1)
        full potential recovery             (score:  17.14, freq:  1)
        six months minimum                  (score:  14.40, freq:  1)
        machine shop vice                   (score:  14.40, freq:  1)
        single document better encapsulates (score:  12.96, freq:  1)
  }, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

tests/benchmarks/test_keyword_extraction.py::TestRAKEExtraction::test_rake_extraction
  /Users/nathanparker/miniconda3/envs/marvin/lib/python3.9/site-packages/_pytest/python.py:166: PytestReturnNotNoneWarning: Expected None, but tests/benchmarks/test_keyword_extraction.py::TestRAKEExtraction::test_rake_extraction returned [ExtractionResult(method='RAKE', keywords=['little brother short story', 'every big tech schemer', 'big tech tells', 'third little brother novel', 'company whose name', 'advertising business model', 'company whose employees often', 'bill every time', 'engine across every platforms', 'tame big content', 'com latest podcast', 'green new deal eco', 'paper trail offers', 'microsoft antitrust trial', 'latest medium column'], scores=[10.0, 2.9377990430622005, 2.507177033492823, 2.421052631578948, 2.2918660287081343, 2.2918660287081343, 2.248803827751196, 2.076555023923445, 1.904306220095694, 1.645933014354067, 1.645933014354067, 1.5598086124401913, 1.430622009569378, 1.430622009569378, 1.430622009569378], processing_time=0.3221717919999998, document_size=92008, error=None), ExtractionResult(method='RAKE', keywords=['large language models', 'new york times', 'entire tech industry', 'big ai players', 'five billion dollars', 'huge ai investments', 'amazon web services', 'stupid magic trick', 'big large language models', 'even though big tech', 'big tech sees', 'big tech realizes', 'big tech hyperscaler', 'big tech accepts', 'largest generative video players'], scores=[6.669039145907473, 3.5943060498220643, 3.442110766279432, 2.761565836298933, 2.62988799010916, 2.2811387900355875, 2.1850533807829184, 2.0569395017793592, 2.031316725978648, 1.9544483985765126, 1.8967971530249113, 1.8967971530249113, 1.8967971530249113, 1.8967971530249113, 1.7238434163701069], processing_time=1.0548055000000005, document_size=100301, error=None), ExtractionResult(method='RAKE', keywords=['totally new passphrase', 'five die rolls', 'diceware word list'], scores=[9.999999999999995, 1.0, 1.0], processing_time=0.03068712499999915, document_size=32701, error=None), ExtractionResult(method='RAKE', keywords=['united healthcare plan', 'united healthcare changes', 'one years old', 'full potential recovery', 'six months minimum', 'full speed ahead', 'every couple months', 'single document better encapsulates', 'occasional sharp stabbing pains', 'nerve conduction study', 'mightiest power available', 'machine shop vice', 'hour car ride', 'hospital waiting room', 'entire day without'], scores=[8.5, 8.5, 2.5000000000000004, 2.5000000000000004, 1.7500000000000002, 1.7500000000000002, 1.7500000000000002, 1.15, 1.15, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], processing_time=0.1886392920000004, document_size=417607, error=None)], which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

tests/benchmarks/test_keyword_extraction.py::TestTFIDFExtraction::test_tfidf_extraction
  /Users/nathanparker/miniconda3/envs/marvin/lib/python3.9/site-packages/_pytest/python.py:166: PytestReturnNotNoneWarning: Expected None, but tests/benchmarks/test_keyword_extraction.py::TestTFIDFExtraction::test_tfidf_extraction returned [ExtractionResult(method='TF-IDF', keywords=['https', 'google', 'com'], scores=[0.05803436222569512, 0.05694099274653987, 0.05163070360235503], processing_time=12.345341083000001, document_size=92008, error=None), ExtractionResult(method='TF-IDF', keywords=['ai'], scores=[0.05266897638318549], processing_time=26.390594125000003, document_size=100301, error=None), ExtractionResult(method='TF-IDF', keywords=['passphrase', 'word', 'symbol', 'buttons', 'able string', 'browser', 'browser window', 'dice', 'diceware word', 'diceware word list', 'extra security', 'five die rolls', 'generator', 'generator buttons', 'index'], scores=[0.1971735696257117, 0.1842967467586181, 0.14821867026083463, 0.11958188990580355, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646, 0.07062699054092646], processing_time=0.5087224170000013, document_size=32701, error=None), ExtractionResult(method='TF-IDF', keywords=['pain', 'us', 'mother', 'healthcare', 'doctor', 'united', 'united healthcare', 'rules', 'maximus', 'time'], scores=[0.07986828686897758, 0.06780118457345063, 0.06563816149676314, 0.06322010742236532, 0.06047874381090501, 0.06047874381090501, 0.06047874381090501, 0.057314071773457015, 0.05357105920123619, 0.05357105920123619], processing_time=4.815666584000006, document_size=417607, error=None)], which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

tests/benchmarks/test_keyword_extraction.py::TestNERExtraction::test_ner_extraction
  /Users/nathanparker/miniconda3/envs/marvin/lib/python3.9/site-packages/_pytest/python.py:166: PytestReturnNotNoneWarning: Expected None, but tests/benchmarks/test_keyword_extraction.py::TestNERExtraction::test_ner_extraction returned [ExtractionResult(method='NER', keywords=['Google', 'Unity', 'Marc Whitten', 'IPO', 'Jeeves', 'Amazon', 'Microsoft', 'Apple', 'Machiavelli', 'Jedi Blue', 'FTX', 'Zuck', 'CFO', 'Mens Rea', 'Google VP'], scores=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], processing_time=1.0541519160000021, document_size=92008, error=None), ExtractionResult(method='NER', keywords=['AI', 'Scale AI', 'Microsoft', 'Google', 'Generative AI', 'Thrive Capital', 'NVIDIA', 'Apple', 'Bloomberg', 'Information', 'MGX', 'UAE', 'CNBC', 'Mubadala', 'FTX'], scores=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], processing_time=2.4220838749999984, document_size=100301, error=None), ExtractionResult(method='NER', keywords=[], scores=[], processing_time=0.04027716600000275, document_size=32701, error=None), ExtractionResult(method='NER', keywords=['Nelson Mandela', 'Camus', 'MLK', 'Gandhi', 'Maximus', 'Nerve Conduction Study', 'United Healthcare', 'Monterey', 'Corticosteroids', 'US', 'END'], scores=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], processing_time=0.3978642499999978, document_size=417607, error=None)], which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

tests/benchmarks/test_keyword_extraction.py::TestHybridExtraction::test_hybrid_extraction
  /Users/nathanparker/miniconda3/envs/marvin/lib/python3.9/site-packages/_pytest/python.py:166: PytestReturnNotNoneWarning: Expected None, but tests/benchmarks/test_keyword_extraction.py::TestHybridExtraction::test_hybrid_extraction returned [ExtractionResult(method='Hybrid', keywords=['little brother short story', 'every big tech schemer', 'company whose name', 'advertising business model', 'com latest podcast', 'green new deal eco', 'microsoft antitrust trial', 'paper trail offers', 'good things worse', 'grift google runs', 'economically rational case', 'first draft complete', 'diy insulin planning picks', 'incredibly blunt enshittification technique', 'shortsighted wall street assholes'], scores=[4.0, 1.1751196172248803, 0.9203520444632401, 0.9203520444632401, 0.6619788387216132, 0.6239234449760765, 0.5758544368077376, 0.5758544368077376, 0.5758544368077376, 0.5758544368077376, 0.48973003489386197, 0.48973003489386197, 0.4861244019138757, 0.4172248803827751, 0.4172248803827751], processing_time=11.190844040999998, document_size=92008, error=None), ExtractionResult(method='Hybrid', keywords=['new york times', 'entire tech industry', 'big ai players', 'five billion dollars', 'amazon web services', 'stupid magic trick', 'identical large language models', 'enterprise software companies', 'one line instead', 'venture capital markets', 'actual revenue growth', 'every single product', 'real business value', 'office copilot features', 'massive data centers'], scores=[1.4431976812353458, 1.3812617128588245, 1.107235325868802, 1.0563726023907158, 0.8794966136196873, 0.8282510620182636, 0.6792882562277581, 0.5435342582531432, 0.5435342582531432, 0.5307228703527873, 0.5179114824524315, 0.5051000945520756, 0.5051000945520756, 0.5051000945520756, 0.49228870665171975], processing_time=24.300023832999997, document_size=100301, error=None), ExtractionResult(method='Hybrid', keywords=['totally new passphrase', 'diceware word list', 'five die rolls', 'symbol', 'buttons', 'results', 'strength', 'number', 'able string', 'physical dice', 'index', 'window', 'version', 'page', 'security'], scores=[4.021188097162276, 0.42118809716227795, 0.42118809716227795, 0.044465601078250386, 0.035874566971741066, 0.021188097162277937, 0.021188097162277937, 0.021188097162277937, 0.021188097162277937, 0.021188097162277937, 0.021188097162277937, 0.021188097162277937, 0.021188097162277937, 0.021188097162277937, 0.021188097162277937], processing_time=0.46039150000000006, document_size=32701, error=None), ExtractionResult(method='Hybrid', keywords=['united healthcare changes', 'full potential recovery', 'occasional sharp stabbing pains', 'single document better encapsulates', 'hospital waiting room', 'consistent treatment impossible', 'hour car ride', 'machine shop vice', 'mightiest power available', 'constant mental fog', 'Corticosteroids', 'MLK', 'Nelson Mandela', 'Nerve Conduction Study', 'Camus'], scores=[3.406158919391717, 1.0061589193917169, 0.45999999999999996, 0.45999999999999996, 0.4061589193917166, 0.4061589193917166, 0.4061589193917166, 0.4061589193917166, 0.4061589193917166, 0.4061589193917166, 0.3, 0.3, 0.3, 0.3, 0.3], processing_time=4.04886883399999, document_size=417607, error=None)], which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(